@model IEnumerable<UserViewModel>
@{
    ViewData["Title"] = "Index";

}
<div>
    <h1 class="alert-success">@TempData["Message"]</h1>
    <h1 class="alert-success">@TempData["Message2"]</h1>
    <div>
        <a class="btn btn-primary mt-3" asp-action="Create">Add New User</a>
    </div>
    <div class="mt-2">
        <form class="row" asp-action="Index">
             <span class="text-danger" asp-validation-summary="ModelOnly"></span> 
            <div class="col-10"><input placeholder="Email" name="Email" type="text" class="form-control" required></input></div>
            <div class="col-2"><button class="btn btn-info" type="submit" value="search">Search</button></div>
        </form>
    </div>
</div>
@if (Model.Any())
{
    <h1>All Users</h1>
    <table class="table table-striped table-hover ">
        <thead>
            <tr>

                <td>@Html.DisplayNameFor(d => d.FirstName)</td>
                <td>@Html.DisplayNameFor(d => d.LastName)</td>
                <td>@Html.DisplayNameFor(d => d.Username)</td>
                <td>@Html.DisplayNameFor(d => d.Email)</td>
                <td>@Html.DisplayNameFor(d => d.Roles)</td>


                <td>Details</td>
                <td>Edit</td>
                <td>Delete</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>

                    <td>@item.FirstName</td>
                    <td>@item.LastName</td>
                    <td>@item.Username</td>
                    <td>@Html.DisplayFor(e => item.Email)</td>
                    <td>@string.Join(",", item.Roles)</td>



                    <partial name="Buttons_partial" model="item.Id.ToString()"></partial>



                </tr>

            }

        </tbody>




    </table>
}
else
{
    <div class="mt-3 alert-warining">
        <h2 class="bg-warning">No Users exist</h2>
    </div>
}




