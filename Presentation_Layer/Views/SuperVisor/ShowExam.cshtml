@model Presentation_Layer.ViewModels.ExamViewModel

@{
    ViewData["Title"] = "Edit Exam";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container p-3">
    <div class="row pt-4">
        <div class="col-md-8 offset-md-2">
            <h2 class="text-primary">Show Exam</h2>
            <div class="card">
                <div class="card-body">
                    <form asp-action="Edit" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="Id" />
                        <input type="hidden" asp-for="CourseId" />

                        <div class="mb-3">
                            <label asp-for="CourseName" class="form-label">Course</label>
                            <input asp-for="CourseName" class="form-control" readonly />
                        </div>

                        <div class="mb-3">
                            <label asp-for="Subject" class="form-label">Subject</label>
                            <input asp-for="Subject" class="form-control" readonly />
                            <span asp-validation-for="Subject" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Code" class="form-label">Exam Code</label>
                            <input asp-for="Code" class="form-control" readonly />
                            <span asp-validation-for="Code" class="text-danger"></span>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="Date" class="form-label">Date</label>
                                <input asp-for="Date" class="form-control" type="date" readonly />
                                <span asp-validation-for="Date" class="text-danger"></span>
                            </div>

                            <div class="col-md-6 mb-3">
                                <label asp-for="DurationMinutes" class="form-label">Duration (minutes)</label>
                                <input asp-for="DurationMinutes" class="form-control" type="number" min="1" readonly />
                                <span asp-validation-for="DurationMinutes" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="mb-3">
                            <h4>Questions</h4>
                            <div id="questions-container">
                                @for (int i = 0; i < Model.Questions.Count; i++)
                                {
                                    <div class="card mb-3 question-card">
                                        <div class="card-header d-flex justify-content-between align-items-center">
                                            <h5>Question @(i + 1)</h5>
                                         @*    @if (i > 0 || Model.Questions.Count > 1)
                                            {
                                                <button type="button" class="btn btn-danger btn-sm remove-question">Remove</button>
                                            } *@
                                        </div>
                                        <div class="card-body">
                                            <input type="hidden" asp-for="Questions[i].Id" />

                                            <div class="mb-3">
                                                <label class="form-label">Question Text</label>
                                                <input asp-for="Questions[i].QuestionText" class="form-control" />
                                                <span asp-validation-for="Questions[i].QuestionText" class="text-danger"></span>
                                            </div>

                                            <div class="mb-3">
                                                <label class="form-label">Correct Answer</label>
                                                <select asp-for="Questions[i].CorrectChoiceIndex" class="form-control">
                                                    <option value="0">Option A</option>
                                                    <option value="1">Option B</option>
                                                    <option value="2">Option C</option>
                                                    <option value="3">Option D</option>
                                                </select>
                                            </div>

                                            <h6>Choices</h6>
                                            <div class="row">
                                                @for (int j = 0; j < Model.Questions[i].Choices.Count; j++)
                                                {
                                                    <div class="col-md-6 mb-2">
                                                        <div class="input-group">
                                                            <span class="input-group-text">@Convert.ToChar(65 + j)</span>
                                                            <input type="hidden" asp-for="Questions[i].Choices[j].Id" />
                                                            <input asp-for="Questions[i].Choices[j].ChoiceText" class="form-control" />
                                                        </div>
                                                        <span asp-validation-for="Questions[i].Choices[j].ChoiceText" class="text-danger"></span>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-3">
                            <a asp-controller="Course" asp-action="Index" class="btn btn-secondary me-md-2">Back to Courses</a>
                            <button type="submit" class="btn btn-primary">Save Changes</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            // Add new question
            $("#add-question").click(function () {
                var questionCount = $(".question-card").length;
                var newQuestion = `
                                    <div class="card mb-3 question-card">
                                        <div class="card-header d-flex justify-content-between align-items-center">
                                            <h5>Question ${questionCount + 1}</h5>
                                            <button type="button" class="btn btn-danger btn-sm remove-question">Remove</button>
                                        </div>
                                        <div class="card-body">
                                            <input type="hidden" name="Questions[${questionCount}].Id" value="0" />

                                            <div class="mb-3">
                                                <label class="form-label">Question Text</label>
                                                <input name="Questions[${questionCount}].QuestionText" class="form-control" required />
                                                <span class="text-danger field-validation-valid" data-valmsg-for="Questions[${questionCount}].QuestionText" data-valmsg-replace="true"></span>
                                            </div>

                                            <div class="mb-3">
                                                <label class="form-label">Correct Answer</label>
                                                <select name="Questions[${questionCount}].CorrectChoiceIndex" class="form-control">
                                                    <option value="0">Option A</option>
                                                    <option value="1">Option B</option>
                                                    <option value="2">Option C</option>
                                                    <option value="3">Option D</option>
                                                </select>
                                            </div>

                                            <h6>Choices</h6>
                                            <div class="row">
                                                ${['A', 'B', 'C', 'D'].map((letter, j) => `
                                                    <div class="col-md-6 mb-2">
                                                        <div class="input-group">
                                                            <span class="input-group-text">${letter}</span>
                                                            <input type="hidden" name="Questions[${questionCount}].Choices[${j}].Id" value="0" />
                                                            <input name="Questions[${questionCount}].Choices[${j}].ChoiceText" class="form-control" required />
                                                        </div>
                                                        <span class="text-danger field-validation-valid" data-valmsg-for="Questions[${questionCount}].Choices[${j}].ChoiceText" data-valmsg-replace="true"></span>
                                                    </div>
                                                `).join('')}
                                            </div>
                                        </div>
                                    </div>
                                `;
                $("#questions-container").append(newQuestion);
                updateQuestionNumbers();
            });

            // Remove question (using event delegation)
            $(document).on("click", ".remove-question", function () {
                if ($(".question-card").length > 1) {
                    $(this).closest(".question-card").remove();
                    updateQuestionNumbers();
                    reindexQuestions();
                } else {
                    alert("At least one question is required.");
                }
            });

            function updateQuestionNumbers() {
                $(".question-card").each(function (index) {
                    $(this).find("h5").text("Question " + (index + 1));
                });
            }

            function reindexQuestions() {
                $(".question-card").each(function (index) {
                    $(this).find("[name^='Questions[']").each(function () {
                        var name = $(this).attr('name');
                        var newName = name.replace(/Questions\[\d+\]/, `Questions[${index}]`);
                        $(this).attr('name', newName);
                    });
                });
            }
        });
    </script>
}